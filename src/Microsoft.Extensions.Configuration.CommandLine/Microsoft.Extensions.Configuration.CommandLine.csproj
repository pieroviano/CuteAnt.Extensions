<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <PackageOutputPath>$(SolutionDir)Packages/</PackageOutputPath>
  </PropertyGroup>
  <Import Project="..\version.aspnet.props" />
  <Import Project="..\nuget.aspnet.props" />
  <Import Project="$(UserProfile)\.nuget\packages\nugetutility\$(NuGetUtilityVersion)\build\NuGet.Utility.props" Condition="Exists('$(UserProfile)\.nuget\packages\nugetutility\$(NuGetUtilityVersion)\build\NuGet.Utility.props')" />
  <Import Project="$(UserProfile)\.nuget\packages\nugetutility\$(NuGetUtilityVersion)\build\NuGet.Utility.targets" Condition="Exists('$(UserProfile)\.nuget\packages\nugetutility\$(NuGetUtilityVersion)\build\NuGet.Utility.targets')" />
  <ItemGroup>
    <PackageReference Include="NuGetUtility" Version="$(NuGetUtilityVersion)" PrivateAssets="All" />
  </ItemGroup>
  <PropertyGroup>
    
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks>net45;net451;net40;net35;net30;net20</TargetFrameworks>
    <AssemblyName>Net4x.Extensions.Configuration.CommandLine</AssemblyName>
    <RootNamespace>Microsoft.Extensions.Configuration</RootNamespace>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Label="NuGet">
    <IncludeSymbols>True</IncludeSymbols>
    <PackageId>Net4x.Extensions.Configuration.CommandLine</PackageId>
    <Description>Command line configuration provider implementation for Ms.Extensions.Configuration.</Description>
    <Title>Ms.Extensions.Configuration.CommandLine-net40-net451-fork</Title>
    <PackageTags>configuration</PackageTags>
  </PropertyGroup>

  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <IsPublishable>False</IsPublishable>
  </PropertyGroup>

  <Target Name="DeleteOldPackage" AfterTargets="Pack" Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">
    <Exec Command="if exist %userprofile%\.nuget\Packages\$(MSBuildProjectName) rmdir /s /q %userprofile%\.nuget\Packages\$(MSBuildProjectName)" />
  </Target>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.Extensions.Configuration\Microsoft.Extensions.Configuration.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="ConfigCmdSR.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>ConfigCmdSR.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="ConfigCmdSR.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>ConfigCmdSR.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
</Project>
