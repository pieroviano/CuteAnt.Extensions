<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <PackageOutputPath>$(SolutionDir)Packages/</PackageOutputPath>
  </PropertyGroup>
  <Import Project="..\version.donet.props" />
  <Import Project="..\nuget.dotnet.props" />
  <Import Project="$(UserProfile)\.nuget\packages\nugetutility\$(NuGetUtilityVersion)\build\NuGet.Utility.props" Condition="Exists('$(UserProfile)\.nuget\packages\nugetutility\$(NuGetUtilityVersion)\build\NuGet.Utility.props')" />
  <Import Project="$(UserProfile)\.nuget\packages\nugetutility\$(NuGetUtilityVersion)\build\NuGet.Utility.targets" Condition="Exists('$(UserProfile)\.nuget\packages\nugetutility\$(NuGetUtilityVersion)\build\NuGet.Utility.targets')" />
  <ItemGroup>
    <PackageReference Include="NuGetUtility" Version="$(NuGetUtilityVersion)" PrivateAssets="All" />
  </ItemGroup>
  <PropertyGroup>
    
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks>net35;net40</TargetFrameworks>
    <RootNamespace>System.Security.Claims</RootNamespace>
    <AssemblyName>System.Security.Claims</AssemblyName>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Label="NuGet">
    <IncludeSymbols>True</IncludeSymbols>
    <PackageId>Net4x.Security.Claims</PackageId>
    <Title>Corefx.Security.Claims-net40-fork</Title>
    <Description>Provides classes that implement claims-based identity in the .NET Framework, including classes that represent claims, claims-based identities, and claims-based principals.</Description>
    <PackageTags>claims</PackageTags>
  </PropertyGroup>

  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <IsPublishable>False</IsPublishable>
  </PropertyGroup>

  <Target Name="DeleteOldPackage" AfterTargets="Pack" Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">
    <Exec Command="if exist %userprofile%\.nuget\Packages\$(MSBuildProjectName) rmdir /s /q %userprofile%\.nuget\Packages\$(MSBuildProjectName)" />
  </Target>

</Project>
